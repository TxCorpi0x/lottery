syntax = "proto3";
package vjdmhd.lottery.lottery;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "lottery/lottery/params.proto";
import "lottery/lottery/lottery.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/vjdmhd/lottery/x/lottery/types";

// Query defines the gRPC querier service.
service Query {
	// Parameters queries the parameters of the module.
	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
		option (google.api.http).get = "/vjdmhd/lottery/lottery/params";
	}

  	// Queries a Lottery by index.
	rpc Lottery(QueryGetLotteryRequest) returns (QueryGetLotteryResponse) {
		option (google.api.http).get = "/vjdmhd/lottery/lottery/lottery/{id}";
	}

	// Queries the current Lottery.
	rpc CurrentLottery(QueryGetCurrentLotteryRequest) returns (QueryGetLotteryResponse) {
		option (google.api.http).get = "/vjdmhd/lottery/lottery/current-lottery";
	}

	// Queries a list of Lottery items.
	rpc LotteryAll(QueryAllLotteryRequest) returns (QueryAllLotteryResponse) {
		option (google.api.http).get = "/vjdmhd/lottery/lottery/lottery";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetCurrentLotteryRequest {	}

message QueryGetLotteryRequest {
	  uint64 id = 1;

}

message QueryGetLotteryResponse {
	Lottery lottery = 1 [(gogoproto.nullable) = false];
}

message QueryAllLotteryRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLotteryResponse {
	repeated Lottery lottery = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
